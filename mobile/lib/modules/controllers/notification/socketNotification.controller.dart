import 'package:get/get.dart';
import 'package:socket_io_client/socket_io_client.dart' as IO;

class SocketNotificationController extends GetxController {
  final String socketUrl = "ws://api-rimpa.nightbears.co/socket.io"; // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô URL ‡∏à‡∏£‡∏¥‡∏á
  late IO.Socket socket;
  final String roomId = "LFAHPcCm-YqlvZHpAAAC"; // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î Room ID

  var hasNewNotification = false.obs; // ‚úÖ ‡πÉ‡∏ä‡πâ RxBool ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÅ‡∏î‡∏á
  var notifications = <Map<String, dynamic>>[].obs; // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ Notification

  @override
  void onInit() {
    super.onInit();
    connectWebSocket();
  }

  void connectWebSocket() {
    socket = IO.io(socketUrl, <String, dynamic>{
      'transports': ['websocket'], // ‚úÖ ‡πÉ‡∏ä‡πâ WebSocket ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
      'autoConnect': false,
      'forceNew': true, // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Connection ‡πÄ‡∏î‡∏¥‡∏°
    });

    socket.connect();

    socket.onConnect((_) {
      print("‚úÖ Connected to WebSocket");
      joinRoom(roomId); // ‚úÖ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°‡∏´‡πâ‡∏≠‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
    });

    // ‚úÖ ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á
    socket.on("room_notification", (data) {
      print("üì© New Notification: $data");
      notifications.insert(0, data); // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Notification ‡πÉ‡∏´‡∏°‡πà‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô
      hasNewNotification(true); // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÅ‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏∞‡∏î‡∏¥‡πà‡∏á
    });

    socket.onDisconnect((_) {
      print("üîå Disconnected, reconnecting...");
      Future.delayed(Duration(seconds: 5), () => connectWebSocket()); // ‚úÖ ‡∏£‡∏µ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏∏‡∏î
    });

    socket.onError((error) {
      print("‚ö†Ô∏è WebSocket Error: $error");
    });
  }

  void joinRoom(String room) {
    socket.emit('join room', room);
    print("üìå Joined Room: $room");
  }

  void clearNotification() {
    hasNewNotification(false); // ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô‡∏à‡∏∏‡∏î‡∏™‡∏µ‡πÅ‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°
  }

  @override
  void onClose() {
    socket.disconnect();
    super.onClose();
  }
}
